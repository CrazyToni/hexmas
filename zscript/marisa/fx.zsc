Class mkSnow : Actor
{
	Default
	{
		Radius 2;
		Height 2;
		RenderStyle "Translucent";
		+NOGRAVITY;
		+NOBLOCKMAP;
		+MISSILE;
		+DONTSPLASH;
		+THRUACTORS;
		+FORCEXYBILLBOARD;
	}
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		if ( ceilingpic != skyflatnum )
		{
			Destroy();
			return;
		}
		Scale *= FRandom[Fog](0.8,1.6);
		Alpha = FRandom[Fog](0.1,0.4);
		Vel.X = FRandom[Fog](-0.1,0.1);
		Vel.Y = FRandom[Fog](-0.1,0.1);
		Vel.Z = FRandom[Fog](-0.4,-1.2);
	}
	States
	{
	Spawn:
		SPCK A -1;
		Stop;
	Death:
		SPCK A 1 A_FadeOut(0.03);
		Wait;
	}
}

Class mkSnowMaker : Actor
{
	bool active;

	override void Activate( Actor activator )
	{
		active = true;
	}
	override void Deactivate( Actor activator )
	{
		active = false;
	}
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		active = !bSTANDSTILL;
	}

	action void A_DoSnow()
	{
		if ( !invoker.active ) return;
		// pick random spots within volume
		double x = args[0];
		double y = args[1];
		double z = args[2];
		int num = args[3];
		for ( int i=0; i<num; i++ )
		{
			Vector3 spawnpos = pos+(FRandom[Fog](-x,x),FRandom[Fog](-y,y),FRandom[Fog](-z,z));
			if ( !level.IsPointInMap(spawnpos) )
				continue;
			let f = Spawn("mkSnow",spawnpos);
			f.master = invoker;
		}
	}
	Default
	{
		//$Title Snow Generator
		//$Category Marisa/FX
		+NOBLOCKMAP;
		+NOGRAVITY;
		+DONTSPLASH;
	}
	States
	{
	Spawn:
		TNT1 A 3 A_DoSnow();
		Wait;
	}
}

Class mkFog : Actor
{
	int lifespan, lifetime;
	double basealpha;

	Default
	{
		Radius 16;
		Height 32;
		+NOBLOCKMAP;
		+NOGRAVITY;
		+DONTSPLASH;
		+FORCEXYBILLBOARD;
		+THRUACTORS;
		Scale 3.0;
		RenderStyle "Shaded";
		StencilColor "FFFFFF";
	}

	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		double ang, pt;
		scale *= FRandom[Fog](0.75,1.25);
		basealpha = FRandom[Fog](0.05,0.2);
		ang = FRandom[Fog](0,360);
		pt = FRandom[Fog](-90,90);
		vel = (cos(pt)*cos(ang),cos(pt)*sin(ang),-sin(pt))*FRandom[Fog](0.1,0.4);
		lifespan = Random[Fog](100,300);
		lifetime = 0;
		SetState(FindState("Spawn")+Random[Fog](0,19));
	}
	override void Tick()
	{
		Super.Tick();
		double lifephase = lifetime/double(lifespan);
		alpha = sin(lifephase*180.0)*basealpha;
		lifetime++;
		if ( lifetime >= lifespan ) Destroy();
	}
	States
	{
	Spawn:
		DUST ABCDEFGHIJKLMNOPQRST -1;
		Stop;
	}
}

Class mkFogMaker : Actor
{
	bool active;

	override void Activate( Actor activator )
	{
		active = true;
	}
	override void Deactivate( Actor activator )
	{
		active = false;
	}
	override void PostBeginPlay()
	{
		Super.PostBeginPlay();
		active = !bSTANDSTILL;
	}

	action void A_DoFog()
	{
		if ( !invoker.active ) return;
		// pick random spots within volume
		double x = args[0];
		double y = args[1];
		double z = args[2];
		int num = args[3];
		for ( int i=0; i<num; i++ )
		{
			Vector3 spawnpos = pos+(FRandom[Fog](-x,x),FRandom[Fog](-y,y),FRandom[Fog](-z,z));
			if ( !level.IsPointInMap(spawnpos) )
				continue;
			let f = Spawn("mkFog",spawnpos);
			f.scale *= 1.+0.1*args[4];
			f.master = invoker;
		}
	}
	Default
	{
		//$Title Fog Generator
		//$Category Marisa/FX
		+NOBLOCKMAP;
		+NOGRAVITY;
		+DONTSPLASH;
	}
	States
	{
	Spawn:
		TNT1 A 3 A_DoFog();
		Wait;
	}
}
